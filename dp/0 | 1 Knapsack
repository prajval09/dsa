#include <bits/stdc++.h>
/*
int solve(vector<int> weight, vector<int> value, int n, int maxWeight,vector<vector<int>>&dp)
{
	if(n==0)
	{
		if(weight[n]<=maxWeight)
		return value[n];
		else
		return 0;
	}

	if(dp[n][maxWeight]!=-1)
	return dp[n][maxWeight];

	int with=0;
	if(weight[n]<=maxWeight)
	with=solve(weight,value,n-1,maxWeight-weight[n],dp)+value[n];

	int without=solve(weight,value,n-1,maxWeight,dp);

	dp[n][maxWeight]=max(with,without);
	return dp[n][maxWeight];
} 

int solve(vector<int> weight, vector<int> value, int n, int maxWeight)
{
	vector<vector<int>>dp(n,vector<int>(maxWeight+1,0));
	for(int i=weight[0];i<=maxWeight;i++)
	{
		if(weight[0]<=maxWeight)
		{
			dp[0][i]=value[0];
		}
		else
		dp[0][i]=0;
	}

	for(int i=1;i<n;i++)
	{
		for(int j=0;j<=maxWeight;j++)
		{
			int incl=0;

			if(weight[i]<=j)
			incl=dp[i-1][j-weight[i]]+value[i];

			int excl=dp[i-1][j];

			dp[i][j]=max(incl,excl);
		}
	}

	return dp[n-1][maxWeight];
	
} 
*/

int solve1(vector<int> weight, vector<int> value, int n, int maxWeight)
{
	vector<int>prev(maxWeight+1,0);
	vector<int>curr(maxWeight+1,0);

	for(int i=weight[0];i<=maxWeight;i++)
	{
		if(weight[0]<=maxWeight)
		{
			prev[i]=value[0];
		}
		else
		prev[i]=0;
	}

	for(int i=1;i<n;i++)
	{
		for(int j=maxWeight;j>=0;j--)
		{
			int incl=0;

			if(weight[i]<=j)
			incl=prev[j-weight[i]]+value[i];

			int excl=prev[j];

			prev[j]=max(incl,excl);
		}
	}

	return prev[maxWeight];
	
} 

int solve(vector<int> weight, vector<int> value, int n, int maxWeight)
{
	vector<int>prev(maxWeight+1,0);
	vector<int>curr(maxWeight+1,0);

	for(int i=weight[0];i<=maxWeight;i++)
	{
		if(weight[0]<=maxWeight)
		{
			prev[i]=value[0];
		}
		else
		prev[i]=0;
	}

	for(int i=1;i<n;i++)
	{
		for(int j=0;j<=maxWeight;j++)
		{
			int incl=0;

			if(weight[i]<=j)
			incl=prev[j-weight[i]]+value[i];

			int excl=prev[j];

			curr[j]=max(incl,excl);
		}
		prev=curr;
	}


	return prev[maxWeight];
	
} 

int knapsack(vector<int> weight, vector<int> value, int n, int maxWeight) 
{
	// Write your code here
	//vector<vector<int>>dp(n,vector<int>(maxWeight+1,-1));
	return solve(weight,value,n,maxWeight);
}
