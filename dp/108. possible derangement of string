#define MOD 1000000007 
#include<bits/stdc++.h>
/*long long int solve(int n)
{
    if(n==1)
    return 0;

    if(n==2)
    return 1;


    return ((n-1)%MOD*(solve(n-1,dp)%MOD+solve(n-2,dp)%MOD))%MOD;
    
}


long long int solve(int n,vector<long long>&dp)
{
    if(n==1)
    return 0;

    if(n==2)
    return 1;

    if(dp[n]!=-1)
    return dp[n];

    dp[n]=((n-1)%MOD*(solve(n-1,dp)%MOD+solve(n-2,dp)%MOD))%MOD;
    return dp[n];
}

long long int solve1(int n)
{
    vector<long long>dp(n+1,-1);

    dp[1]=0;
    dp[2]=1;

    for(int i=3;i<=n;i++)
    {
        dp[i]=((i-1)%MOD*(dp[i-1]%MOD+dp[i-2]%MOD))%MOD;
    }

    return dp[n];
    
}*/

long long int solve1(int n)
{
    long long prev1=0;
    long long prev2=1;

    for(int i=3;i<=n;i++)
    {
        long long ans=((i-1)%MOD*(prev2%MOD+prev1%MOD))%MOD;
        prev1=prev2;
        prev2=ans;
    }

    return prev2;
}

long long int countDerangements(int n) {
    // Write your code here.
    vector<long long>dp(n+1,-1);
    return solve1(n);
}
